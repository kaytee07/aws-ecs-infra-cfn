AWSTemplateFormatVersion: '2010-09-09'
Description: IAM roles and policies for ECS, CodePipeline, CodeDeploy, and GitHub OIDC

Parameters:
  GitHubRepo:
    Type: String
    Description: GitHub repo for OIDC trust (e.g., owner/repo)
  GitHubBranch:
    Type: String
    Default: main
    Description: Branch for OIDC trust
  EcrRepositoryArn:
    Type: String
    Description: ARN of ECR repo (imported from ecr stack)
  EcsTaskExecutionRoleArn:
    Type: String
    Description: ARN of ECS Task Execution Role
  CodeDeployAppName:
    Type: String
    Default: SpringBootCodeDeployApp
    Description: Name of the CodeDeploy application
  CodeDeployDeploymentGroupName:
    Type: String
    Default: SpringBootDeploymentGroup
    Description: Name of the CodeDeploy deployment group
  AwsAccountId:
    Type: String
    Default: '714377355835'
    Description: AWS Account ID
  AwsRegion:
    Type: String
    Default: eu-west-1
    Description: AWS Region
  S3BucketName:
    Type: String
    Default: springboot-codedeploy-artifacts
    Description: Name of existing S3 bucket for CodeDeploy artifacts

Resources:
  # GitHub OIDC Provider
  GitHubOidcProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1  # GitHub's thumbprint

  # GitHub OIDC Role for ECR push and ECS operations
  GitHubOidcRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOidcProvider
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubRepo}:ref:refs/heads/${GitHubBranch}
      Policies:
        - PolicyName: GitHubActionsECSPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # ECS Permissions
              - Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTasks
                  - ecs:DescribeTaskDefinition
                  - ecs:ListTasks
                  - ecs:UpdateService
                  - ecs:RegisterTaskDefinition
                  - ecs:DeregisterTaskDefinition
                Resource: '*'
              # ECR GetAuthorizationToken (must be * resource)
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: '*'
              # ECR Repository-specific permissions
              - Effect: Allow
                Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetRepositoryPolicy
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                  - ecr:DescribeImages
                  - ecr:BatchGetImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage
                Resource: !Ref EcrRepositoryArn
              # IAM PassRole permissions for ECS roles
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: 
                  - !Ref EcsTaskExecutionRoleArn
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole
              # S3 Permissions
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:GetBucketAcl          # Add this
                  - s3:GetBucketLocation     # Add this
                  - s3:GetObjectTagging      # Add this
                  - s3:GetObjectVersionTagging
                Resource:
                  - !Sub arn:aws:s3:::${S3BucketName}
                  - !Sub arn:aws:s3:::${S3BucketName}/*
              # CloudFormation Permissions
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                Resource: '*'
              # CodeDeploy Permissions (for GitHub Actions to trigger deployments)
              - Effect: Allow
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:ContinueDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:GetDeploymentInstance
                  - codedeploy:ListApplications
                  - codedeploy:ListDeploymentConfigs
                  - codedeploy:ListDeploymentGroups
                  - codedeploy:ListDeploymentInstances
                  - codedeploy:ListDeployments
                  - codedeploy:RegisterApplicationRevision
                  - codedeploy:StopDeployment
                Resource:
                  - !Sub arn:aws:codedeploy:${AwsRegion}:${AwsAccountId}:application:${CodeDeployAppName}
                  - !Sub arn:aws:codedeploy:${AwsRegion}:${AwsAccountId}:deploymentgroup:${CodeDeployAppName}/${CodeDeployDeploymentGroupName}
                  - !Sub arn:aws:codedeploy:${AwsRegion}:${AwsAccountId}:deployment:*
                  - !Sub arn:aws:codedeploy:${AwsRegion}:${AwsAccountId}:deploymentconfig:*

  # ECS Task Execution Role
  EcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EcsTaskExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  # CodePipeline Roles
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:GetBucketVersioning
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                  - s3:GetObjectTagging
                  - s3:GetObjectVersionTagging
                  - codedeploy:*
                  - ecs:DescribeServices
                  - ecs:UpdateService
                  - iam:PassRole
                  - ecr:DescribeImages
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchCheckLayerAvailability
                Resource: '*'

  # CodeDeploy Role for ECS
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS

Outputs:
  GitHubOidcRoleArn:
    Value: !GetAtt GitHubOidcRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-GitHubOidcRoleArn
  EcsTaskExecutionRoleArn:
    Value: !GetAtt EcsTaskExecutionRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-EcsTaskExecutionRoleArn
  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodePipelineRoleArn
  CodeDeployRoleArn:
    Value: !GetAtt CodeDeployRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodeDeployRoleArn
  S3BucketName:
    Value: !Ref S3BucketName
    Export:
      Name: !Sub ${AWS::StackName}-S3BucketName